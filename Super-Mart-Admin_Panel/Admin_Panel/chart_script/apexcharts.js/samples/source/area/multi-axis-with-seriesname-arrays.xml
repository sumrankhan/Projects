<title>Multi-YAxis-with-seriesName-arrays</title>

<scripts>
<script>
var generateDayWiseTimeSeries = function (baseval, count, yrange) {
  var i = 0;
  var series = [];
  while (i < count) {
    var x = baseval;
    var y = Math.floor(Math.random() * (yrange.max - yrange.min + 1)) + yrange.min;

    series.push([x, y]);
    baseval += 86400000;
    i++;
  }
  return series;
};

var data1 = generateDayWiseTimeSeries(new Date('11 Feb 2017 GMT').getTime(), 10, {
     min: 5,
     max: 20
   });
   
var data2 = generateDayWiseTimeSeries(new Date('11 Feb 2017 GMT').getTime(), 10, {
     min: 10,
     max: 20
   });
   
var data3 = generateDayWiseTimeSeries(new Date('11 Feb 2017 GMT').getTime(), 10, {
     min: 5,
     max: 25
   });
   
var data4 = generateDayWiseTimeSeries(new Date('11 Feb 2017 GMT').getTime(), 10, {
     min: 10,
     max: 35
   });
</script>
</scripts>

<chart>
<options>
chart: {
  type: 'area',
  height: 350,
  stacked: false
},
colors: ['#00EE00', '#008800', '#FF0000', '#AA00FF'],
dataLabels: {
  enabled: false
},
stroke: {
  curve: 'monotoneCubic',
  width: [4, 4, 2, 2],
  dashArray: [0, 0, 2, 2]
},
legend: {
  position: 'top',
  horizontalAlign: 'left'
},
yaxis: [
  {
    seriesName: ['Broccoli', 'Spinach'],
    axisTicks: {
      show: true,
      color: '#008800'
    },
    axisBorder: {
      show: true,
      color: '#008800'
    },
    labels: {
      style: {
        colors: '#008800',
      },
      formatter: (val) => {
        if (typeof val !== "undefined") {
          let ref = val.toFixed(0);
          return val == ref ? val : ''
        }
        return val
      }
    },
    title: {
      text: "Vegetables",
      style: {
        color: '#008800'
      }
    },
  },
  {
    seriesName: ['Plums','Apples'],
    opposite: true,
    axisTicks: {
      show: true,
      color: '#FF0000'
    },
    axisBorder: {
      show: true,
      color: '#FF0000'
    },
    labels: {
      style: {
        colors: '#FF0000',
      },
      formatter: (val) => {
        if (typeof val !== "undefined") {
          let ref = val.toFixed(0);
          return val == ref ? val : ''
        }
        return val
      }
    },
    title: {
      text: "Fruit",
      style: {
        color: '#FF0000'
      }
    },
  }
],
xaxis: {
  type: 'datetime'
}
</options>

<series>
[{
   name: 'Broccoli',
   data: data1
 },
 {
   name: 'Spinach',
   data: data2
 },
 {
   name: 'Apples',
   data: data3
 },
 {
   name: 'Plums',
   data: data4
 }]
</series>

</chart>